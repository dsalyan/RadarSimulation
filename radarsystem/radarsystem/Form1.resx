<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhNgA3APZ/AP//////9///7v//5///5v//4Pf7/fD3++/3++/v7+/v5e/v0ufz+efr7eDw99/v
        99/f39/fyt/fxNfs9c/o88/Pz8/Pxc/Pts7n88nd5sfk8cLJzL/g77+/v7+/uL+/qLzf77fd7a+vr6+v
        mqbN3aazuaLC0J+fn5+fjJ7Az56wt5qutpqlqpestZCxv5CQjI+Pj4+Pfouns4CIjICAgH9/cHyXo3Bw
        cHBwaHBwYmR7hWNyeGBgYGBgVFdsdlRiaVBQUFBQSFBQRkxWW0xOT0dUWkBAQEBAODw+PzdESjQ6PTAw
        MDAwKi84PCMqLSAgICAgHBAQEBAQDg4PDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh/h1H
        aWZCdWlsZGVyIDAuNCBieSBZdmVzIFBpZ3VldAAh+QQEDwD/ACwAAAAANgA3AAAH/oAFgoOEhYaHiImK
        i4yNjo+QkZKTlJWWl4oSOQuYnQs5QpydlxdQPaOYF1KnlRcXAp2qR5UfQjEAMBaXC1JSopGfUBUAAA1T
        upVHfx+GmhKKF0xMCcQABkROCpQxf6yEMUy/h6pQ1MQGCDN/RACSvL6FPeHQvcPVBgwlf38nsJA9f2oU
        ygEvEa8/IqpZQ/BA3x8pCSAteChuxLJFynAotMbggYp9f2gEeJQjICFe3gTlQEGoJJQDGxEwmLAC5JN2
        jqD8eTaI4K8FTC4QurCvw0Z8Dyi0AInQ3yKLQk5KETjoCIoAAfwJ+WPkqMykO5jyGMkI4IhvO3sKGZBg
        SQ8a/R0SyD3acYKGH0xvNoIipRATb7wkBDjxJ4oIGjwSw4VQzcEDDBqaMP0DwCkioikl/DkrKMapAEBC
        EoOQEECFDjAqGHhgl8PkPx0sH+LGuXPfQUyYAYjyZ0kCEVEYx3ysQcbr2IsAxvMmAYogAEv2PfnDYyMx
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>